/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Signer} from 'ethers';
import {Provider, TransactionRequest} from '@ethersproject/providers';
import {Contract, ContractFactory, Overrides} from '@ethersproject/contracts';

import {MockDistributionManager} from './MockDistributionManager';

export class MockDistributionManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockDistributionManager> {
    return super.deploy(overrides || {}) as Promise<MockDistributionManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockDistributionManager {
    return super.attach(address) as MockDistributionManager;
  }
  connect(signer: Signer): MockDistributionManagerFactory {
    return super.connect(signer) as MockDistributionManagerFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockDistributionManager {
    return new Contract(address, _abi, signerOrProvider) as MockDistributionManager;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: '_reward',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_stakedByUser',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_totalStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_underlyingAsset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_user',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'underlyingAsset',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'stakedByUser',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalStaked',
            type: 'uint256',
          },
        ],
        internalType: 'struct DistributionTypes.UserStakeInput[]',
        name: 'stakes',
        type: 'tuple[]',
      },
    ],
    name: 'claimRewards',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'emissionPerSecond',
            type: 'uint128',
          },
          {
            internalType: 'uint256',
            name: 'totalStaked',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'underlyingAsset',
            type: 'address',
          },
        ],
        internalType: 'struct DistributionTypes.AssetConfigInput[]',
        name: 'assetsNewConfig',
        type: 'tuple[]',
      },
    ],
    name: 'configureAssets',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'underlyingAsset',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'stakedByUser',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalStaked',
            type: 'uint256',
          },
        ],
        internalType: 'struct DistributionTypes.UserStakeInput[]',
        name: 'stakes',
        type: 'tuple[]',
      },
    ],
    name: 'getUnclaimedRewards',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
    ],
    name: 'setReward',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'underlyingAsset',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'stakedByUser',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'totalStaked',
        type: 'uint256',
      },
    ],
    name: 'userPositionUpdate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002b670de0b6b3a76400006001600160e01b0361003016565b610035565b600455565b610365806100446000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80635cdbe419116100665780635cdbe4191461010457806382776b621461010c578063891e1ee014610121578063b2a5dbfa14610129578063e9717eef146100de5761009e565b80630c0102d0146100a35780631be0717f146100c1578063293be456146100c95780633c563be9146100de5780633e6a0caa146100f1575b600080fd5b6100ab61013c565b6040516100b89190610326565b60405180910390f35b6100ab610142565b6100dc6100d73660046102fa565b610148565b005b6100ab6100ec366004610268565b61014d565b6100ab6100ff366004610225565b610157565b6100ab610196565b61011461019c565b6040516100b89190610312565b6101146101ab565b6100dc6101373660046102ba565b6101ba565b60035481565b60045481565b600455565b6004549392505050565b600080546001600160a01b039586166001600160a01b031991821617909155600180549490951693169290921790925560029190915560035560045490565b60025481565b6000546001600160a01b031681565b6001546001600160a01b031681565b5050565b80356001600160a01b03811681146101d557600080fd5b92915050565b60008083601f8401126101ec578182fd5b50813567ffffffffffffffff811115610203578182fd5b60208301915083602060608302850101111561021e57600080fd5b9250929050565b6000806000806080858703121561023a578384fd5b61024486866101be565b935061025386602087016101be565b93969395505050506040820135916060013590565b60008060006040848603121561027c578283fd5b61028685856101be565b9250602084013567ffffffffffffffff8111156102a1578283fd5b6102ad868287016101db565b9497909650939450505050565b600080602083850312156102cc578182fd5b823567ffffffffffffffff8111156102e2578283fd5b6102ee858286016101db565b90969095509350505050565b60006020828403121561030b578081fd5b5035919050565b6001600160a01b0391909116815260200190565b9081526020019056fea2646970667358221220a117b143a8c0538ac95b91037efe3f8f973e7155357657225ce9e142ee9cf3ca64736f6c634300060a0033';
