"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseUpgradeabilityProxyFactory = void 0;
var contracts_1 = require("@ethersproject/contracts");
var BaseUpgradeabilityProxyFactory = /** @class */ (function (_super) {
    __extends(BaseUpgradeabilityProxyFactory, _super);
    function BaseUpgradeabilityProxyFactory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    BaseUpgradeabilityProxyFactory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    BaseUpgradeabilityProxyFactory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    BaseUpgradeabilityProxyFactory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    BaseUpgradeabilityProxyFactory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    BaseUpgradeabilityProxyFactory.connect = function (address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    };
    return BaseUpgradeabilityProxyFactory;
}(contracts_1.ContractFactory));
exports.BaseUpgradeabilityProxyFactory = BaseUpgradeabilityProxyFactory;
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address"
            }
        ],
        name: "Upgraded",
        type: "event"
    },
    {
        stateMutability: "payable",
        type: "fallback"
    }
];
var _bytecode = "0x608060405234801561001057600080fd5b5060ae8061001f6000396000f3fe6080604052600a600c565b005b60126020565b601e601a6022565b6053565b565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e80600081146073573d6000f35b3d6000fdfea2646970667358221220dd1f6c5acb3e67968eca0685773f8f2530118a6a9cf3d507576c901c2d7e989264736f6c634300060c0033";
//# sourceMappingURL=BaseUpgradeabilityProxyFactory.js.map